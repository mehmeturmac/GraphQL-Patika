type Event {
  _id: ID!
  title: String!
  desc: String!
  date: String!
  from: String!
  to: String!
  location: Location!
  user: User!
  participants: [Participant!]!
}

input createEvent {
  title: String!
  desc: String!
  date: String!
  from: String!
  to: String!
  location: ID!
  user: ID!
}

input updateEvent {
  title: String
  desc: String
  date: String
  from: String
  to: String
  location: ID
  user: ID
}

type Query {
  events: [Event!]!
  event(id: ID!): Event!
}

type Mutation {
  createEvent(data: createEvent!): Event!
  updateEvent(id: ID!, data: updateEvent!): Event!
  deleteEvent(id: ID!): Event!
  deleteAllEvents: DeleteAllOutput!
}

type Subscription {
  eventCreated(user: ID): Event!
  eventUpdated: Event!
  eventDeleted: Event!
  eventCount: Int!
}
